{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","reportWebVitals.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","Categories","map","c","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","process","usePromise","query","axios","get","response","articles","data","NewsPage","match","params","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad3ca057.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst categories = [\n  {\n    name: 'all',\n    text: '전체보기',\n  },\n  {\n    name: 'business',\n    text: '비즈니스',\n  },\n  {\n    name: 'entertainment',\n    text: '엔터테이먼트',\n  },\n  {\n    name: 'health',\n    text: '건강',\n  },\n  {\n    name: 'science',\n    text: '과학',\n  },\n  {\n    name: 'sports',\n    text: '스포츠',\n  },\n  {\n    name: 'technology',\n    text: '기술',\n  },\n];\n\nconst CategoriesBlock = styled.div`\n  display: flex;\n  padding: 1rem;\n  width: 768px;\n  margin: 0 auto;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    overflow-x: auto;\n  }\n`;\nconst Category = styled(NavLink)`\n  font-size: 1.125rem;\n  cursor: pointer;\n  white-space: pre;\n  text-decoration: none;\n  color: inherit;\n  padding-bottom: 0.25rem;\n\n  &:hover {\n    color: #495057;\n  }\n\n  &.active {\n    font-weight: 600;\n    border-bottom: 2px solid #22b8cf;\n    color: #22b8cf;\n    &::hover {\n      color: #3bc9db;\n    }\n  }\n\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nconst Categories = () => {\n  return (\n    <CategoriesBlock>\n      {categories.map((c) => (\n        <Category\n          key={c.name}\n          activeClassName=\"active\"\n          exact={c.name === 'all'}\n          to={c.name === 'all' ? '/' : `/${c.name}`}\n        >\n          {c.text}\n        </Category>\n      ))}\n    </CategoriesBlock>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst NewsItemBlock = styled.div`\n  display: flex;\n\n  .thumbnail {\n    margin-right: 1rem;\n    img {\n      display: block;\n      width: 160px;\n      height: 100px;\n      object-fit: cover;\n    }\n  }\n  .contents {\n    h2 {\n      margin: 0;\n      a {\n        color: black;\n      }\n    }\n    p {\n      margin: 0;\n      line-height: 1.5;\n      margin-top: 0.5rem;\n      white-space: normal;\n    }\n  }\n  & + & {\n    margin-top: 3rem;\n  }\n`;\nconst NewsItem = ({ article }) => {\n  const { title, description, url, urlToImage } = article;\n  return (\n    <NewsItemBlock>\n      {urlToImage && (\n        <div className=\"thumbnail\">\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={urlToImage} alt=\"thumbnail\" />\n          </a>\n        </div>\n      )}\n      <div className=\"contents\">\n        <h2>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {title}\n          </a>\n        </h2>\n        <p>{description}</p>\n      </div>\n    </NewsItemBlock>\n  );\n};\n\nexport default NewsItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport NewsItem from './NewsItem';\nimport axios from 'axios';\nimport usePromise from '../lib/usePromise';\n\nconst NewsListBlock = styled.div`\n  box-sizing: border-box;\n  padding-bottom: 3rem;\n  width: 768px;\n  margin: 0 auto;\n  margin-top: 2rem;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`;\n\nconst NewsList = ({ category }) => {\n  const [loading, response, error] = usePromise(() => {\n    const query = category === 'all' ? '' : `&category=${category}`;\n    return axios.get(\n      `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=170ab91923d94a0fbffd643ec15ec1a5`,\n    );\n  }, [category]);\n\n  // 대기 중일 때\n  if (loading) {\n    return <NewsListBlock>대기 중...</NewsListBlock>;\n  }\n  // 아직 response 값이 설정되지 않았을 때\n  if (!response) {\n    return null;\n  }\n  //에러가 발생했을 때\n  if (error) {\n    return <NewsListBlock>에러 발생!</NewsListBlock>;\n  }\n  // response가 유효할 때\n  const { articles } = response.data;\n  return (\n    <NewsListBlock>\n      {articles.map((article) => (\n        <NewsItem key={article.url} article={article} />\n      ))}\n    </NewsListBlock>\n  );\n\n  // const [articles, setArticles] = useState(null);\n  // const [loading, setLoding] = useState(false);\n\n  // useEffect(() => {\n  //   // async를 사용하는 함수 따로 선언\n  //   const fetchData = async () => {\n  //     setLoding(true);\n  //     try {\n  //       const query = category === 'all' ? '' : `&category=${category}`;\n  //       const response = await axios.get(\n  //         `http://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=170ab91923d94a0fbffd643ec15ec1a5`,\n  //       );\n  //       setArticles(response.data.articles);\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //     setLoding(false);\n  //   };\n  //   fetchData();\n  // }, [category]);\n\n  // // 대기 중일 때\n  // if (loading) {\n  //   return <NewsListBlock>대기 중...</NewsListBlock>;\n  // }\n  // // 아직 articles 값이 설정되지 않았을 때\n  // if (!articles) {\n  //   return null;\n  // }\n  // // article 값이 유효할 때\n  // return (\n  //   <NewsListBlock>\n  //     {articles.map((article) => (\n  //       <NewsItem key={article.url} article={article} />\n  //     ))}\n  //   </NewsListBlock>\n  // );\n};\n\nexport default NewsList;\n","import { useState, useEffect } from 'react';\n\nexport default function usePromise(promiseCreator, deps) {\n  // 대기 중/완료/실패에 대한 상태 관리\n  const [loading, setLoading] = useState(false);\n  const [resolved, setResolved] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const process = async () => {\n      setLoading(true);\n      try {\n        const resolved = await promiseCreator();\n        setResolved(resolved);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n    process();\n  }, deps);\n\n  return [loading, resolved, error];\n}\n","import React from 'react';\nimport Categories from '../components/Categories';\nimport NewsList from '../components/NewsList';\n\nconst NewsPage = ({ match }) => {\n  // 카테고리가 선택되지 않았으면 기본값 all로 사용\n  const category = match.params.category || 'all';\n\n  return (\n    <>\n      <Categories />\n      <NewsList category={category} />\n    </>\n  );\n};\n\nexport default NewsPage;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport NewsPage from './pages/NewsPage';\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/:category?\" component={NewsPage} />;\n    </Router>\n  );\n};\n\nexport default App;\n\n// import React, { useState, useCallback } from 'react';\n// import NewsList from './components/NewsList';\n// import Categories from './components/Categories';\n\n// const App = () => {\n//   const [category, setCategory] = useState('all');\n//   const onSelect = useCallback((category) => setCategory(category), []);\n//   return (\n//     <>\n//       <Categories category={category} onSelect={onSelect} />\n//       <NewsList category={category} />\n//     </>\n//   );\n// };\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <App />,\n  // </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}